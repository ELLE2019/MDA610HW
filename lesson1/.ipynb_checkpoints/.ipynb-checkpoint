{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'this': 1,\n",
       " 'is': 2,\n",
       " 'the': 1,\n",
       " 'textfile,': 1,\n",
       " 'and': 2,\n",
       " 'it': 1,\n",
       " 'used': 1,\n",
       " 'to': 1,\n",
       " 'take': 1,\n",
       " 'words': 1,\n",
       " 'count': 1}"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from collections import Counter\n",
    "t = 'this is the textfile, and it is used to take words and count'\n",
    "\n",
    "dict(Counter(t.split()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "min is: -6 \n",
      "max is: 300\n"
     ]
    }
   ],
   "source": [
    "def min_and_max(x):\n",
    "    m = min(x)\n",
    "    n = max(x)\n",
    "    print('min is: '+str(m),'\\nmax is: '+str(n))\n",
    "\n",
    "a = [0,-6,7,5,300,0.3,8]\n",
    "min_and_max(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1.2, 5.8, 6.8, 26.8, 32.8, 41.8]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def cum_sum(x):\n",
    "    for i in range(len(x)):\n",
    "        if i == 0:\n",
    "            x[i]=x[i]\n",
    "        else:\n",
    "            x[i]=x[i-1]+x[i]\n",
    "    return x\n",
    "\n",
    "a = [1.2,4.6,1,20,6,9]\n",
    "cum_sum(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "172"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def dot(x,y):\n",
    "    if len(x) == len(y):\n",
    "        sum = 0\n",
    "        for i in range(len(x)):\n",
    "            n = x[i]*y[i]\n",
    "            sum += n\n",
    "        return sum\n",
    "            \n",
    "    else:\n",
    "        print('There is an error: Two list length are not equal')\n",
    "\n",
    "x = [9,4,2,7,8]\n",
    "y = [10,5,7,0,6]\n",
    "dot(x,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
